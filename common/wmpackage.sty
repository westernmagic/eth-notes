\NeedsTeXFormat{LaTeX2e}
\RequirePackage[check-declarations]{expl3}
\ProvidesExplPackage{wmpackage}{2016/04/01}{}{}
\RequirePackage{l3regex}

\ExplSyntaxOn

\msg_new:nnn {wmpackage} {debug} {#1~#2~#3}
\msg_new:nnn {wmpackage} {ToDo} {ToDo: ~ #1}
\msg_new:nnn {wmpackage} {FileNotFound} { File ~ not ~ found: ~ #1 }

\cs_generate_variant:Nn \regex_match:nnT          { nxT  }
\cs_generate_variant:Nn \regex_extract_once:nnNT  { nxNT }
\cs_generate_variant:Nn \tl_set_from_file:Nnn     { NnV  }
\cs_generate_variant:Nn \str_case:nn              { Vn   }
\cs_generate_variant:Nn \regex_extract_all:nnNT   { nVNT }
\cs_generate_variant:Nn \seq_set_split:Nnn        { Nnx  }

%\msg_warning:nnx {wmpackage} {ToDo} { (RequirePacakge|LoadClass)WithOptions ~ not ~ adding ~ options. }

% Declare variables
\seq_new:N \l__wmpackage_files_seq
\str_new:N \l__wmpackage_file_name_str
\tl_new:N  \l__wmpackage_file_contents_tl
\int_new:N \l__wmpackage_iterator_int
\int_new:N \l__wmpackage_file_token_count_int
\str_new:N \l__wmpackage_load_command_str
\tl_new:N  \l__wmpackage_options_tl
\str_new:N \l__wmpackage_next_file_str

\cs_new_nopar:Nn \wmpackage_parse:n {
	% #1 = file name

	\str_set:Nx \l__wmpackage_file_name_str { #1 }
	\file_if_exist:nTF \l__wmpackage_file_name_str {

		% Load file contents into token list
		\tl_set_from_file:Nnn \l__wmpackage_file_contents_tl { \char_set_catcode_letter:N @ } \l__wmpackage_file_name_str

		\regex_extract_all:nVNT { \c{ usepackage | documentclass | (?: (?: RequirePackage | LoadClass ) (?: WithOptions )? ) } \ ? (?: \[ [^ \] ]* \] )? \cB. [ a-z A-Z 0-9 \_ \- \. ]+ \cE. } \l__wmpackage_file_contents_tl \l_tmpa_seq {}

		\seq_show:N \l_tmpa_seq

		\tl_trim_spaces:N \l__wmpackage_file_contents_tl
		\regex_replace_all:nnN { (\[) } { \{\[ } \l__wmpackage_file_contents_tl
		\regex_replace_all:nnN { (\]) } { \]\} } \l__wmpackage_file_contents_tl
		\tl_set_rescan:Nno \l__wmpackage_file_contents_tl { \char_set_catcode_letter:N @ } \l__wmpackage_file_contents_tl

		%\tl_show:N \l__wmpackage_file_contents_tl
		% Initialize loop variables
		\int_set:Nn \l__wmpackage_iterator_int 1
		\int_set:Nn \l__wmpackage_file_token_count_int { \tl_count:N \l__wmpackage_file_contents_tl }

		

		% loop through all the tokens
		\int_until_do:nn { \l__wmpackage_iterator_int == \l__wmpackage_file_token_count_int } {
			% clear variables
			\str_clear:N \l__wmpackage_load_command_str
			\tl_clear:N  \l__wmpackage_options_tl
			\str_clear:N \l__wmpackage_next_file_str

			\regex_extract_once:nxNT { ^\c{ usepackage | documentclass | (?: (?: RequirePackage | LoadClass ) (?: WithOptions )? ) } } { \tl_item:Nn \l__wmpackage_file_contents_tl \l__wmpackage_iterator_int } \l_tmpa_seq {
				\str_set:Nx \l__wmpackage_load_command_str { \seq_item:Nn \l_tmpa_seq 1 }
				\int_incr:N \l__wmpackage_iterator_int
				
				\regex_extract_once:nxNT { ^\[ (.*) \]$ } { \tl_item:Nn \l__wmpackage_file_contents_tl \l__wmpackage_iterator_int } \l_tmpa_seq {
					\tl_set:Nx \l__wmpackage_options_tl { \seq_item:Nn \l_tmpa_seq 2 }
					\int_incr:N \l__wmpackage_iterator_int
				}

				\regex_match:nxT { ^\w+$ } { \tl_item:Nn \l__wmpackage_file_contents_tl \l__wmpackage_iterator_int } {
					\str_set:Nx \l__wmpackage_next_file_str { \tl_item:Nn \l__wmpackage_file_contents_tl \l__wmpackage_iterator_int }
					\str_put_right:Nx \l__wmpackage_next_file_str {
						\str_case:Vn \l__wmpackage_load_command_str {
							{\usepackage}               {.sty}
							{\RequirePackage}           {.sty}
							{\RequirePackageWithOptions}{.sty}
							{\documentclass}            {.cls}
							{\LoadClass}                {.cls}
							{\LoadClassWithOptions}     {.cls}
						}
					}
					%\msg_error:nnxxx {wmpackage} {debug} \l__wmpackage_load_command_str \l__wmpackage_next_file_str \l__wmpackage_options_tl
					\seq_if_in:NVF \l__wmpackage_files_seq \l__wmpackage_next_file_str {
						\seq_put_right:NV \l__wmpackage_files_seq \l__wmpackage_next_file_str
						\seq_set_split:Nnx \l_tmpa_seq {} { \wmpackage_parse:n \l__wmpackage_next_file_str }
						\seq_map_inline:Nn \l_tmpa_seq {
							\seq_if_in:NnF \l__wmpackage_files_seq {##1} {
								\seq_put_right:Nn \l__wmpackage_files_seq {##1}
							}
						}
					}
					
				}
			}

			\int_incr:N \l__wmpackage_iterator_int
		}
		\seq_use:Nn \l__wmpackage_files_seq {}
	} {
		% File not found
		\msg_error:nnx {wmpackage} {FileNotFound} \l__wmpackage_file_name_str
	}

	% Clean up after ourselves
	%\cs_undefine:N \l__wmpackage_file_name_str
	%\cs_undefine:N \l__wmpackage_file_contents_tl
	%\cs_undefine:N \l__wmpackage_iterator_int
	%\cs_undefine:N \l__wmpackage_file_token_count_int
	%\cs_undefine:N \l__wmpackage_load_command_str
	%\cs_undefine:N \l__wmpackage_options_tl
	%\cs_undefine:N \l__wmpackage_next_file_str
}

\endinput